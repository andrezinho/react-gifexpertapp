{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","value","setValue","onSubmit","e","preventDefault","trim","length","cate","type","placeholder","onChange","target","GetGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","c","i","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC7B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,mCACC,sBAAMC,SAVY,SAACC,GACrBA,EAAEC,iBACCJ,EAAMK,OAAOC,OAAS,IACxBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAcO,OAChCN,EAAS,MAMR,SACC,uBACCO,KAAK,OACLR,MAAOA,EACPS,YAAY,YACZC,SAnBkB,SAACP,GACvBF,EAASE,EAAEQ,OAAOX,e,+BCNPY,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,8DAEFI,MAAQF,GAFN,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACtB,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATd,kBAYdM,GAZc,4CAAH,sDCCPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IACzC,OACE,mCACC,qBAAKc,UAAU,6CAA6CC,IAAKf,EAAKgB,IAAKN,OCAlEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEzB,ECJ2B,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAU,WACNxB,EAASC,GAAWwB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACnCf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAEGqB,EDVqBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACE,mCACC,gCACC,6BAAMpB,IACN,4BAAKoB,GAAW,gBAChB,qBAAKJ,UAAU,YAAf,SAECH,EAAOJ,KAAK,SAAAC,GAEV,OAAO,cAAC,EAAD,eAAiCA,GAAdA,EAAIC,eEEvBgB,EAjBM,WACpB,MAAoCzC,mBAAS,CAAC,WAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KACA,OACE,qCACC,gDACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEC2C,EAAWnB,KAAK,SAACoB,EAAEC,GAClB,OAAO,cAAC,EAAD,CAAiB9B,SAAY6B,GAAfA,UCP3BE,IAASC,OAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,W","file":"static/js/main.337ed9b0.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n\tconst [value, setValue] = useState('');\n\tconst handleOnchange = (e) => {\n\t\tsetValue(e.target.value);\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif(value.trim().length > 2){\n\t\t\tsetCategories(cate => [value,...cate]);\n\t\t\tsetValue('');\n\t\t}\n\n\t}\n\treturn (\n\t\t\t<>\n\t\t\t\t<form onSubmit={ handleSubmit }>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tplaceholder=\"Buscar...\"\n\t\t\t\t\t\tonChange={ handleOnchange }\n\t\t\t\t\t/>\t\t\t\t\t\n\t\t\t\t</form>\n\t\t\t</>\n\t\t);\n}\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired\n}\n","\nexport const GetGifs = async(category) => {\t\n\t\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=YQX3ZiymhcunazRjUIQo32x2Q7ucHerV&limit=6`;\n\t\tconst resp = await fetch ( url );\n\t\tconst { data } = await resp.json();\n\n\t\tconst gifs = data.map( img => {\n\t\t\treturn {\n\t\t\t\tid: img.id,\n\t\t\t\ttitle: img.title,\n\t\t\t\turl: img.images.downsized_medium.url\n\t\t\t}\n\t\t});\n\t\treturn gifs;\n}","import { React } from 'react';\n\nexport const GifGridItem = ( { id, title, url } ) => {\n\treturn (\n\t\t\t<>\n\t\t\t\t<img className=\"card animate__animated animate__rubberBand\" src={url} alt={title} />\n\t\t\t</>\n\t\t);\n}\n","import { React} from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ( {category} ) => {\n\n\tconst {data:images, loading} = useFetchGifs(category);\n\t\n\treturn (\n\t\t\t<>\n\t\t\t\t<div>\n\t\t\t\t\t<h3>{ category }</h3>\n\t\t\t\t\t<p>{ loading && 'Cargando...' }</p>\n\t\t\t\t\t<div className=\"card-grid\">\n\t\t\t\t\t{ \n\t\t\t\t\t\timages.map( img => \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn <GifGridItem key={ img.id } { ...img } />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n}\n","import { useEffect, useState } from \"react\"\nimport { GetGifs } from \"../helpers/GetGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        GetGifs( category ).then( imgs => setstate({\n                data: imgs,\n                loading: false\n            }            \n        ));\n    }, [category])\n\n    return state;\n}","import { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\nconst GifExpertApp = () => {\t\n\tconst [categories, setCategories] = useState(['Naruto']);\t\n\treturn (\n\t\t\t<>\n\t\t\t\t<h2>Gif Expert App</h2>\t\t\t\t\t\t\n\t\t\t\t<AddCategory setCategories = { setCategories}  />\n\t\t\t\t<hr/>\t\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\tcategories.map( (c,i) => {\n\t\t\t\t\t\treturn <GifGrid key={c} category = {c} />;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t\n\t\t\t</>\n\t\t);\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />,document.getElementById('root'));"],"sourceRoot":""}